{
  "version": "3.0.0",
  "updated": "2025-10-06",
  "legend": {
    "status": {
      "mock": "Hardcoded or localStorage data, needs DB connection",
      "db": "Persisted in database",
      "derived": "Computed from other fields",
      "user_input": "Direct user input"
    }
  },
  "fields": {
    "project.totalEffort": {
      "id": "project.totalEffort",
      "label": "Total Effort (PD)",
      "status": "derived",
      "source": ["phases[].effort"],
      "transform": "sum(phases.effort)",
      "destinations": ["ui.dashboard.totalPD", "ui.export.pdf.summary"],
      "page": "Dashboard, Present",
      "component": "MetricsCard",
      "validation": "number, min: 0, max: 100000",
      "auditTrail": true
    },
    "project.totalCost": {
      "id": "project.totalCost",
      "label": "Total Cost",
      "status": "derived",
      "source": ["phases[].effort", "resources[].hourlyRate", "resources[].allocation"],
      "transform": "sum(phases.effort * resources.hourlyRate * resources.allocation / 8)",
      "destinations": ["ui.dashboard.totalCost", "ui.export.pdf.financials"],
      "page": "Dashboard, Planning",
      "component": "CostPanel",
      "currency": "USD",
      "validation": "number, min: 0"
    },
    "project.moduleCombo": {
      "id": "project.moduleCombo",
      "label": "Selected Modules",
      "status": "user_input",
      "source": ["ui.decisions.moduleSelector"],
      "transform": "join(selectedModules, ',')",
      "destinations": ["db.project.moduleCombo", "ui.summary.modules"],
      "page": "Decisions",
      "component": "ModuleSelector",
      "validation": "string, pattern: /^(Finance|SCM|HR)(,(Finance|SCM|HR))*$/"
    },
    "phase.effort": {
      "id": "phase.effort",
      "label": "Phase Effort",
      "status": "db",
      "source": ["db.phases.effort", "dal.listPhases()"],
      "transform": "direct retrieval from database via DAL",
      "destinations": ["ui.timeline.phaseCard", "project.totalEffort"],
      "page": "Timeline, Planning",
      "component": "PhaseCard",
      "validation": "number, min: 0, max: 10000",
      "auditTrail": true
    },
    "ricefw.reports.count": {
      "id": "ricefw.reports.count",
      "label": "Reports Count",
      "status": "db",
      "source": ["db.ricefwItems", "dal.listRicefwItems()"],
      "transform": "count(ricefwItems.filter(item => item.type === 'report'))",
      "destinations": ["phase.effort.realize", "ui.summary.ricefwBreakdown"],
      "page": "RICEFW",
      "component": "RicefwPanel",
      "validation": "number, min: 0, max: 500",
      "auditTrail": true
    },
    "ricefw.interfaces.complexity": {
      "id": "ricefw.interfaces.complexity",
      "label": "Interface Complexity",
      "status": "db",
      "source": ["db.integrationSpecs", "dal.listIntegrationSpecs()"],
      "transform": "weightedAverage(integrationSpecs.complexity, integrationSpecs.effort)",
      "destinations": ["phase.effort.realize", "ui.summary.ricefwBreakdown"],
      "page": "RICEFW",
      "component": "IntegrationPanel",
      "validation": "enum: ['S', 'M', 'L']",
      "mdMultipliers": {"S": 8, "M": 12, "L": 18},
      "auditTrail": true
    },
    "resources.pm.allocation": {
      "id": "resources.pm.allocation",
      "label": "PM Allocation %",
      "status": "derived",
      "source": ["phase.effort", "lib/resourcing/model.ts"],
      "transform": "createDefaultPhaseResources() with 70% Technical, 20% Functional, 10% Architect",
      "destinations": ["phase.cost", "ui.resources.allocationChart"],
      "page": "Planning, Resources",
      "component": "ResourcePanel",
      "validation": "number, min: 0, max: 100",
      "auditTrail": true,
      "note": "M4: Phase-level resource model implemented"
    },
    "wrapper.projectManagement.effort": {
      "id": "wrapper.projectManagement.effort",
      "label": "PM Wrapper Effort",
      "status": "derived",
      "source": ["technicalEffort", "lib/resourcing/model.ts"],
      "transform": "calculateWrapper(technicalEffort, 15%, averageRate)",
      "destinations": ["project.totalEffort", "ui.summary.wrapperBreakdown"],
      "page": "Planning",
      "component": "WrapperPanel",
      "validation": "number, min: 0",
      "auditTrail": true,
      "note": "M4: Calculated from phase-level resources with 15% overhead"
    },
    "chips.country.value": {
      "id": "chips.country.value",
      "label": "Countries",
      "status": "user_input",
      "source": ["ui.chips.chipEditor", "nlp.chipParser"],
      "transform": "extractCountries(rawText)",
      "destinations": ["db.chips.value", "project.localization", "phase.effort.localization"],
      "page": "Presales",
      "component": "ChipCard",
      "validation": "array<string>, countryCode ISO-3166",
      "confidence": "0.0-1.0"
    },
    "timeline.phase.startBusinessDay": {
      "id": "timeline.phase.startBusinessDay",
      "label": "Phase Start Day",
      "status": "derived",
      "source": ["phase.dependencies", "phase.workingDays", "holidays"],
      "transform": "calculateStartDay(dependencies, workingDays, holidays)",
      "destinations": ["db.phases.startBusinessDay", "ui.timeline.gantt"],
      "page": "Timeline",
      "component": "GanttChart",
      "validation": "number, min: 0"
    }
  },
  "pages": {
    "Presales": {
      "fields": ["chips.country.value", "chips.employees.value", "chips.modules.value"],
      "mockCount": 0,
      "dbCount": 3,
      "derivedCount": 0
    },
    "Decisions": {
      "fields": ["project.moduleCombo", "project.ssoMode", "project.integrationPosture"],
      "mockCount": 0,
      "dbCount": 3,
      "derivedCount": 0
    },
    "RICEFW": {
      "fields": ["ricefw.reports.count", "ricefw.interfaces.complexity", "ricefw.forms.count"],
      "mockCount": 0,
      "dbCount": 3,
      "derivedCount": 0,
      "status": "✅ Connected to DB via DAL"
    },
    "Resources": {
      "fields": ["resources.pm.allocation", "resources.technical.hourlyRate"],
      "mockCount": 0,
      "dbCount": 2,
      "derivedCount": 0,
      "status": "✅ Using DAL for resource persistence"
    },
    "Planning": {
      "fields": ["phase.effort", "phase.cost", "wrapper.projectManagement.effort"],
      "mockCount": 0,
      "dbCount": 3,
      "derivedCount": 0,
      "status": "✅ All data from DB via DAL"
    },
    "Dashboard": {
      "fields": ["project.totalEffort", "project.totalCost", "project.duration"],
      "mockCount": 0,
      "dbCount": 0,
      "derivedCount": 3
    }
  },
  "completedMigrations": [
    {
      "field": "phase.effort",
      "previousStatus": "mock",
      "currentStatus": "db",
      "completedDate": "2025-10-06",
      "milestone": "M2",
      "implementation": "Using dal.listPhases() for direct DB retrieval with audit trail"
    },
    {
      "field": "ricefw.*.count",
      "previousStatus": "mock",
      "currentStatus": "db",
      "completedDate": "2025-10-06",
      "milestone": "M2",
      "implementation": "Using dal.listRicefwItems() and dal.listIntegrationSpecs() with Zod validation"
    },
    {
      "field": "resources.*.allocation",
      "previousStatus": "db",
      "currentStatus": "derived",
      "completedDate": "2025-10-06",
      "milestone": "M4",
      "implementation": "Phase-level resource model with createDefaultPhaseResources()"
    },
    {
      "field": "wrapper.projectManagement.effort",
      "previousStatus": "db",
      "currentStatus": "derived",
      "completedDate": "2025-10-06",
      "milestone": "M4",
      "implementation": "Calculated from technical effort using calculateWrapper() with 15% overhead"
    }
  ],
  "proposedMigrations": [],
  "milestones": {
    "M1": {
      "name": "Traceability Ledger",
      "status": "completed",
      "healthScore": 50,
      "completedDate": "2025-10-05"
    },
    "M2": {
      "name": "DAL (DB Truth)",
      "status": "completed",
      "healthScore": 80,
      "completedDate": "2025-10-06"
    },
    "M3": {
      "name": "Responsive Shell & Renames",
      "status": "completed",
      "healthScore": 85,
      "completedDate": "2025-10-06",
      "components": [
        "src/components/ui/Container.tsx",
        "src/components/ui/Typography.tsx",
        "src/components/ui/ResponsiveShell.tsx",
        "src/pages/ReferenceDiagram.tsx"
      ]
    },
    "M4": {
      "name": "Phase-Level Resourcing",
      "status": "completed",
      "healthScore": 90,
      "completedDate": "2025-10-06",
      "components": [
        "src/lib/resourcing/model.ts",
        "src/lib/resourcing/calculator.ts"
      ]
    }
  }
}