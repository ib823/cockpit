name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cockpit_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Lint code
        run: pnpm lint

      - name: Type check
        run: pnpm typecheck

      - name: Run tests
        run: pnpm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cockpit_test
          DATABASE_URL_UNPOOLED: postgresql://postgres:postgres@localhost:5432/cockpit_test?connection_limit=1
          NEXTAUTH_SECRET: test-secret-min-32-chars-for-ci-pipeline-12345
          NEXTAUTH_URL: http://localhost:3000
          NODE_ENV: test

      - name: Build application
        run: pnpm build
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cockpit_test
          DATABASE_URL_UNPOOLED: postgresql://postgres:postgres@localhost:5432/cockpit_test?connection_limit=1
          NEXTAUTH_SECRET: test-secret-min-32-chars-for-ci-pipeline-12345
          NEXTAUTH_URL: http://localhost:3000
          NODE_ENV: production

      - name: Security audit
        run: pnpm audit --audit-level=high
        continue-on-error: true
